name: Back End Deploy Stage

on:
  push:
    branches: [stage]
    paths:
      - echo-token-metadata/**/*
      - echo-warmer/**/*
      - hardhat/artifacts/**/*
      - votes/**/*
      - nginx/**/*
      - deploy.sh
      - docker-compose.yml
      - .github/**/*

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Compile contracts and abis
        run: |
          cd hardhat
          yarn
          yarn build
          ls artifacts

      - name: Generate echo-warmer publisher go bindings
        run: |
          docker run \
            -u `id -u`:`id -g` \
            -v `pwd`/hardhat/artifacts/contracts:/sources \
            -v `pwd`/echo-warmer/publisher:/out \
            ethereum/client-go:alltools-latest abigen \
            --abi /sources/Publisher.sol/Publisher.abi \
            --out /out/artifact_Publisher_sol.go \
            --pkg  publisher \
            --type Publisher \
            --bin /sources/Publisher.sol/Publisher.bin

      - name: Generate echo-warmer narrator NFT go bindings
        run: |
          docker run \
            -u `id -u`:`id -g` \
            -v `pwd`/hardhat/artifacts/contracts:/sources \
            -v `pwd`/echo-warmer/publisher:/out \
            ethereum/client-go:alltools-latest abigen \
            --abi /sources/NarratorNFTs.sol/NarratorNFTs.abi \
            --out /out/artifact_NarratorNFTs_sol.go \
            --pkg  publisher \
            --type NarratorNFTs \
            --bin /sources/NarratorNFTs.sol/NarratorNFTs.bin

      - name: Build echo-token-metadata contract go bindings
        run: |
          docker run \
            -u `id -u`:`id -g` \
            -v `pwd`/hardhat/artifacts/contracts:/sources \
            -v `pwd`/echo-token-metadata:/out \
            ethereum/client-go:alltools-latest abigen \
            --abi /sources/Publisher.sol/Publisher.abi \
            --out /out/artifact_Publisher_sol.go \
            --pkg  main \
            --type Publisher \
            --bin /sources/Publisher.sol/Publisher.bin


      - name: Build services
        run: docker compose build

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_EMBLEM_STUDIO_ACCESS_TOKEN }}

      - name: Deploy services
        uses: appleboy/ssh-action@master
        with:
          host: avenluutn-api-dev.squad.games
          username: ROOT
          key: ${{ secrets.DIGITALOCEAN_EMBLEM_STUDIO_SSH_PRIVATE_KEY }}
          script: |
            cd Avenluutn
            git branch
            ./deploy.sh
