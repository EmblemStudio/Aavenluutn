#!/bin/bash

function wake () {
    bname=$(basename $(pwd))
    if [ $bname != "echo" ]
    then
        echo "wake must be run from the Avenluutn/echo folder"
        return [1]
    fi
    tag=emblem/avenluutn:test
    pubtag=emblem/avenluutn:latest
    container_name=avenluutn
    hardhat_abi_path=`pwd`/../hardhat/artifacts/contracts
    abigen_out_path=`pwd`/publisher
    store_path=`pwd`/store
    info_path=`pwd`/info
    localhost_pub_addr=`cat ../hardhat/localhost_PublisherAddress.txt`
    case $1 in
        "build")
            echo "copying latest script"
            cp ../scripts/dist/* ./testAssets

            docker run \
                   -u `id -u`:`id -g` \
                   -v $hardhat_abi_path:/sources \
                   -v $abigen_out_path:/out \
                   ethereum/client-go:alltools-latest abigen \
                   --abi /sources/Publisher.sol/Publisher.abi \
                   --out /out/artifact_Publisher_sol.go \
                   --pkg  publisher \
                   --type Publisher \
                   --bin /sources/Publisher.sol/Publisher.bin \

            docker run \
                   -u `id -u`:`id -g` \
                   -v $hardhat_abi_path:/sources \
                   -v $abigen_out_path:/out \
                   ethereum/client-go:alltools-latest abigen \
                   --abi /sources/NarratorNFTs.sol/NarratorNFTs.abi \
                   --out /out/artifact_NarratorNFTs_sol.go \
                   --pkg  publisher \
                   --type NarratorNFTs \
                   --bin /sources/NarratorNFTs.sol/NarratorNFTs.bin

            docker build -t $tag .
            ;;
        "run")
            wake build
            mkdir store
            docker run \
                   -p 8000:8000 \
                   --env AVENLUUTN_PUB_ADDR=$localhost_pub_addr \
                   --env AVENLUUTN_PROVIDER="http://localhost:8545" \
                   --env AVENLUUTN_SCRIPT_PROVIDER="http://localhost:8545" \
                   --rm \
                   --net host \
                   -v $store_path:/store \
                   -v $info_path:/info \
                   --name $container_name \
                   $tag
            ;;
        "test")
            go test ./...
            ;;
        "stop")
            docker stop $container_name
            ;;
        "format")
            go fmt
            ;;
        "publish")
            docker build -t $pubtag .
            docker push $pubtag
            ;;
        *)
            which wake
            ;;
    esac
}
